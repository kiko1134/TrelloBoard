[{"/home/uuser/Desktop/trello/TrelloBoard/src/index.js":"1","/home/uuser/Desktop/trello/TrelloBoard/src/App.js":"2","/home/uuser/Desktop/trello/TrelloBoard/src/components/board/board.js":"3","/home/uuser/Desktop/trello/TrelloBoard/src/components/createBoard/createBoard.js":"4","/home/uuser/Desktop/trello/TrelloBoard/src/components/beforeHomepage/preHome.js":"5","/home/uuser/Desktop/trello/TrelloBoard/src/components/navbar/navbar.js":"6","/home/uuser/Desktop/trello/TrelloBoard/src/components/column/column.js":"7","/home/uuser/Desktop/trello/TrelloBoard/src/components/card/card.js":"8","/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardModal.js":"9","/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js":"10"},{"size":221,"mtime":1650185549105,"results":"11","hashOfConfig":"12"},{"size":2203,"mtime":1650185549105,"results":"13","hashOfConfig":"12"},{"size":1873,"mtime":1650185549105,"results":"14","hashOfConfig":"12"},{"size":2054,"mtime":1650185549105,"results":"15","hashOfConfig":"12"},{"size":3465,"mtime":1650185549105,"results":"16","hashOfConfig":"12"},{"size":3065,"mtime":1650186185349,"results":"17","hashOfConfig":"12"},{"size":2189,"mtime":1650185549105,"results":"18","hashOfConfig":"12"},{"size":1107,"mtime":1650185549105,"results":"19","hashOfConfig":"12"},{"size":643,"mtime":1650185549105,"results":"20","hashOfConfig":"12"},{"size":693,"mtime":1650185549105,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"64z0it",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/uuser/Desktop/trello/TrelloBoard/src/index.js",[],[],"/home/uuser/Desktop/trello/TrelloBoard/src/App.js",[],[],"/home/uuser/Desktop/trello/TrelloBoard/src/components/board/board.js",[],[],"/home/uuser/Desktop/trello/TrelloBoard/src/components/createBoard/createBoard.js",[],[],"/home/uuser/Desktop/trello/TrelloBoard/src/components/beforeHomepage/preHome.js",["53"],[],"/home/uuser/Desktop/trello/TrelloBoard/src/components/navbar/navbar.js",["54","55","56"],[],"import ReactDOM from \"react-dom\";\n\nexport default function Navbar({ appState, setAppState }) {\n\n    return ReactDOM.createPortal(\n        <>\n            <a className=\"navbar-brand\"><strong>Trello icon</strong></a>\n\n\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                data-target=\"#navbarSupportedContent-6\"\n                aria-controls=\"navbarSupportedContent-6\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\" />\n            </button>\n            {localStorage.getItem('username') ?\n                <div className=\"collapse navbar-collapse justify-content-between\" id=\"navbarSupportedContent-6\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Boards\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <p>Boards</p>\n                                <div className=\"hr\">\n                                    <hr />\n                                </div>\n                                {appState.boards.map((board, index) => (\n                                    <a className=\"dropdown-item\" href=\"/home\" key={index} onClick={()=>{\n                                        setAppState({...appState, current_board: index})\n                                    }}>{board.name}</a>\n                                ))}\n                            </div>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Recent\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <p>Recent Boards</p>\n                                <hr />\n                                <a className=\"dropdown-item\" href=\"/\">Some recent boards...</a>\n                            </div>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" href=\"/createBoard\">Create</a>\n                        </li>\n                    </ul>\n                    <form className=\"form-inline my-2 my-lg-0\">\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                    </form>\n                </div>\n                : <></>\n            }\n        </>,\n        document.getElementById('navbar')\n    );\n}\n","/home/uuser/Desktop/trello/TrelloBoard/src/components/column/column.js",[],[],"/home/uuser/Desktop/trello/TrelloBoard/src/components/card/card.js",[],[],"/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardModal.js",[],[],"/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":24,"column":8,"nodeType":"59","endLine":24,"endColumn":10,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":13,"nodeType":"63","endLine":7,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":20,"column":29,"nodeType":"63","endLine":20,"endColumn":163},{"ruleId":"61","severity":1,"message":"62","line":36,"column":29,"nodeType":"63","endLine":36,"endColumn":163},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isBoardExisting' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["64"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"65","fix":"66"},"Update the dependencies array to be: [isBoardExisting, navigate]",{"range":"67","text":"68"},[541,543],"[isBoardExisting, navigate]"]