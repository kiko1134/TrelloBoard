{"ast":null,"code":"var _jsxFileName = \"/home/vaskopaligorov/Desktop/TrelloBoard/src/components/modals/cardNameModal.js\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardNameModal(_ref) {\n  let {\n    card,\n    cardIndex,\n    columnIndex,\n    appState,\n    setAppState,\n    cardNameModalIsOpen,\n    setCardNameModalOpen\n  } = _ref;\n  Modal.setAppElement('#root');\n  console.log();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: cardNameModalIsOpen,\n    shouldCloseOnOverlayClick: false,\n    onRequestClose: () => setCardNameModalOpen(false),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"CardModal: \", card.name, \" from column: \", appState.boards[appState.current_board].columns[columnIndex].name, \" (Board: \", appState.boards[appState.current_board].name, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"TODO: edit card name(probably with Object.assign())\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Closes with Esc button (for now)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = CardNameModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardNameModal\");","map":{"version":3,"sources":["/home/vaskopaligorov/Desktop/TrelloBoard/src/components/modals/cardNameModal.js"],"names":["React","Modal","CardNameModal","card","cardIndex","columnIndex","appState","setAppState","cardNameModalIsOpen","setCardNameModalOpen","setAppElement","console","log","name","boards","current_board","columns"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,eAAe,SAASC,aAAT,OAA0H;AAAA,MAAnG;AAACC,IAAAA,IAAD;AAAOC,IAAAA,SAAP;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,WAAzC;AAAuDC,IAAAA,mBAAvD;AAA4EC,IAAAA;AAA5E,GAAmG;AAErIR,EAAAA,KAAK,CAACS,aAAN,CAAoB,OAApB;AACAC,EAAAA,OAAO,CAACC,GAAR;AACA,sBACA,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEJ,mBAAf;AAAoC,IAAA,yBAAyB,EAAE,KAA/D;AAAsE,IAAA,cAAc,EAAE,MAAIC,oBAAoB,CAAC,KAAD,CAA9G;AAAA,4BACI;AAAA,gCAAgBN,IAAI,CAACU,IAArB,oBAAyCP,QAAQ,CAACQ,MAAT,CAAgBR,QAAQ,CAACS,aAAzB,EAAwCC,OAAxC,CAAgDX,WAAhD,EAA6DQ,IAAtG,eAAqHP,QAAQ,CAACQ,MAAT,CAAgBR,QAAQ,CAACS,aAAzB,EAAwCF,IAA7J;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOH;KAXuBX,a","sourcesContent":["import React from 'react'\nimport Modal from 'react-modal'\n\nexport default function CardNameModal({card, cardIndex, columnIndex, appState, setAppState,  cardNameModalIsOpen, setCardNameModalOpen}) {\n\n    Modal.setAppElement('#root');\n    console.log()\n    return (\n    <Modal isOpen={cardNameModalIsOpen} shouldCloseOnOverlayClick={false} onRequestClose={()=>setCardNameModalOpen(false)}> \n        <h1>CardModal: {card.name} from column: {appState.boards[appState.current_board].columns[columnIndex].name} (Board: {appState.boards[appState.current_board].name})</h1>\n        <p>TODO: edit card name(probably with Object.assign())</p>\n        <h1>Closes with Esc button (for now)</h1>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}