{"ast":null,"code":"var _jsxFileName = \"/home/uuser/Desktop/TrelloBoard/src/components/createBoard/createBoard.js\",\n    _s = $RefreshSig$();\n\nimport Form from 'react-bootstrap/Form';\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateBoard(_ref) {\n  _s();\n\n  let {\n    appState,\n    setAppState\n  } = _ref;\n  let navigate = useNavigate();\n  const [boardName, setBoardName] = useState('');\n\n  function createBoard() {\n    if (boardName.trim()) {\n      const board = {\n        name: boardName,\n        columns: []\n      };\n      setAppState({ ...appState,\n        boards: appState.boards.concat([board]),\n        current_board: appState.boards.length\n      });\n      navigate('/home');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"boardInputName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Board name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Board name\",\n        onChange: event => setBoardName(event.target.value),\n        value: boardName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => createBoard(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateBoard, \"IivkpctuZca/toJVBsZ8Zyo/nys=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateBoard\");","map":{"version":3,"sources":["/home/uuser/Desktop/TrelloBoard/src/components/createBoard/createBoard.js"],"names":["Form","useState","useNavigate","CreateBoard","appState","setAppState","navigate","boardName","setBoardName","createBoard","trim","board","name","columns","boards","concat","current_board","length","event","target","value"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;AAGA,eAAe,SAASC,WAAT,OAA8C;AAAA;;AAAA,MAAzB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAyB;AACzD,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,WAASQ,WAAT,GAAuB;AACnB,QAAGF,SAAS,CAACG,IAAV,EAAH,EAAoB;AAChB,YAAMC,KAAK,GAAG;AACVC,QAAAA,IAAI,EAAEL,SADI;AAEVM,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIAR,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcU,QAAAA,MAAM,EAAEV,QAAQ,CAACU,MAAT,CAAgBC,MAAhB,CAAuB,CAACJ,KAAD,CAAvB,CAAtB;AAAuDK,QAAAA,aAAa,EAAEZ,QAAQ,CAACU,MAAT,CAAgBG;AAAtF,OAAD,CAAX;AACAX,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH;AACJ;;AAED,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,WAAW,EAAC,YAAtC;AAAmD,QAAA,QAAQ,EAAGY,KAAD,IAASV,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlF;AAAwG,QAAA,KAAK,EAAEb;AAA/G;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAIE,WAAW,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA3BuBN,W;UACLD,W;;;KADKC,W","sourcesContent":["import Form from 'react-bootstrap/Form'\nimport {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nexport default function CreateBoard({appState, setAppState}) {\n    let navigate = useNavigate();\n\n    const [boardName, setBoardName] = useState('');\n\n    function createBoard() {\n        if(boardName.trim()){\n            const board = {\n                name: boardName,\n                columns: [],\n            };\n            setAppState({...appState, boards: appState.boards.concat([board]), current_board: appState.boards.length});\n            navigate('/home');\n        }\n    }\n\n    return (\n        <Form>\n            <Form.Group controlId=\"boardInputName\">\n                <Form.Label>Board name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Board name\" onChange={(event)=>setBoardName(event.target.value)} value={boardName}/>\n            </Form.Group>\n            <button type=\"button\" onClick={()=>createBoard()}>\n                Submit\n            </button>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}