{"ast":null,"code":"var _jsxFileName = \"/home/vaskopaligorov/Desktop/TrelloBoard/src/components/board/board.js\";\nimport React from \"react\";\nimport Card from \"../card/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  let {\n    appState,\n    setAppState\n  } = _ref;\n  // localStorage.clear()\n  let board = appState.boards[appState.current_board];\n\n  function ShowListInput(bool) {\n    if (bool) {\n      document.getElementById(\"addList\").style.display = \"block\";\n      document.getElementById(\"addColumn\").style.display = \"none\";\n    } else {\n      document.getElementById(\"addList\").style.display = \"none\";\n      document.getElementById(\"addColumn\").style.display = \"flex\";\n    }\n  }\n\n  function AddList(element) {\n    if (element.value.trim()) {\n      let column = {};\n      column.name = element.value;\n      column.cards = [];\n      let boards = [];\n\n      for (let i = 0; i < appState.boards.length; i++) {\n        boards[i] = appState.boards[i].slice();\n      }\n\n      boards[appState.current_board].columns.push(column);\n      setAppState(...appState);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"columnsHolder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"columns\",\n      children: appState.boards[appState.current_board].columns.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"js-column js-list list\",\n        id: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: element.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"js-list\",\n          id: \"cards\",\n          children: element.cards.map(card => {\n            /*#__PURE__*/\n            _jsxDEV(Card, {\n              content: card\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"js-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addColumn\",\n        className: \"js-list\",\n        onClick: () => ShowListInput(true),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add another list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addList\",\n        className: \"js-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Enter list title...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"js-list \",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: event => AddList(event.target.parentElement.previousSibling),\n            children: \"Add list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times icon\",\n            onClick: () => ShowListInput(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/vaskopaligorov/Desktop/TrelloBoard/src/components/board/board.js"],"names":["React","Card","Board","appState","setAppState","board","boards","current_board","ShowListInput","bool","document","getElementById","style","display","AddList","element","value","trim","column","name","cards","i","length","slice","columns","push","map","card","event","target","parentElement","previousSibling"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"../card/card\";\n\nfunction Board({appState, setAppState}) {\n  // localStorage.clear()\n\n  let board = appState.boards[appState.current_board]\n\n  function ShowListInput(bool) {\n    if (bool) {\n      document.getElementById(\"addList\").style.display = \"block\";\n      document.getElementById(\"addColumn\").style.display = \"none\";\n    }\n    else {\n      document.getElementById(\"addList\").style.display = \"none\";\n      document.getElementById(\"addColumn\").style.display = \"flex\";\n    }\n  }\n\n  function AddList(element) {\n    if (element.value.trim()) {\n      let column = {};\n      column.name = element.value;\n      column.cards = [];\n\n      let boards = [];\n      for (let i = 0; i < appState.boards.length; i++) {\n          boards[i] = appState.boards[i].slice();\n      }\n      boards[appState.current_board].columns.push(column);\n      setAppState(...appState, );\n    }\n  }\n\n  return (\n    <div id=\"columnsHolder\">\n      \n      <div id=\"columns\">\n        {\n          appState.boards[appState.current_board].columns.map((element) =>\n            <div className=\"js-column js-list list\" id=\"column\">\n              <h2>{element.name}</h2>\n              <div className=\"js-list\" id=\"cards\">\n                {element.cards.map((card)=>{\n                  <Card content={card}/>\n                })}\n              </div>\n            </div>\n          )}\n      </div>\n      <div className=\"js-column\">\n        <div id=\"addColumn\" className=\"js-list\" onClick={() => ShowListInput(true)}>\n          <i className=\"fas fa-plus\"></i>\n          <p>Add another list</p>\n        </div>\n        <div id=\"addList\" className=\"js-list\">\n          <input type=\"text\" id=\"name\" placeholder=\"Enter list title...\" />\n          <div className=\"js-list \">\n            <button className=\"btn btn-primary\" onClick={(event) => AddList(event.target.parentElement.previousSibling)}>Add list</button>\n            <i className=\"fas fa-times icon\" onClick={() => ShowListInput(false)}></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}