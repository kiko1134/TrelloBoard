{"ast":null,"code":"var _jsxFileName = \"/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardNameModal(_ref) {\n  _s();\n\n  let {\n    card,\n    cardIndex,\n    columnIndex,\n    appState,\n    setAppState,\n    cardNameModalIsOpen,\n    setCardNameModalOpen\n  } = _ref;\n  Modal.setAppElement('#root');\n  const [cardName, setCardName] = useState('');\n\n  function changeName() {// setAppState({...appState, current_board: })\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: cardNameModalIsOpen,\n    shouldCloseOnOverlayClick: false,\n    onRequestClose: () => setCardNameModalOpen(false),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"CardNameModal: \", card.name, \" from column: \", appState.boards[appState.current_board].columns[columnIndex].name, \" (Board: \", appState.boards[appState.current_board].name, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => setCardName(event.target.value),\n      value: cardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"TODO: edit card name(probably with Object.assign())\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Closes with Esc button (for now)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardNameModal, \"sJCoARBx+trl8qCepSuetlLVvmo=\");\n\n_c = CardNameModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardNameModal\");","map":{"version":3,"sources":["/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js"],"names":["React","useState","Modal","CardNameModal","card","cardIndex","columnIndex","appState","setAppState","cardNameModalIsOpen","setCardNameModalOpen","setAppElement","cardName","setCardName","changeName","name","boards","current_board","columns","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,eAAe,SAASC,aAAT,OAA0H;AAAA;;AAAA,MAAnG;AAACC,IAAAA,IAAD;AAAOC,IAAAA,SAAP;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,WAAzC;AAAuDC,IAAAA,mBAAvD;AAA4EC,IAAAA;AAA5E,GAAmG;AAErIR,EAAAA,KAAK,CAACS,aAAN,CAAoB,OAApB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASa,UAAT,GAAqB,CACjB;AACH;;AAGD,sBACA,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,mBAAf;AAAoC,IAAA,yBAAyB,EAAE,KAA/D;AAAsE,IAAA,cAAc,EAAE,MAAIC,oBAAoB,CAAC,KAAD,CAA9G;AAAA,4BACI;AAAA,oCAAoBN,IAAI,CAACW,IAAzB,oBAA6CR,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACU,aAAzB,EAAwCC,OAAxC,CAAgDZ,WAAhD,EAA6DS,IAA1G,eAAyHR,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACU,aAAzB,EAAwCF,IAAjK;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,QAAQ,EAAGI,KAAD,IAASN,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArC;AAA2D,MAAA,KAAK,EAAET;AAAlE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWH;;GAtBuBT,a;;KAAAA,a","sourcesContent":["import React, {useState} from 'react'\nimport Modal from 'react-modal'\n\nexport default function CardNameModal({card, cardIndex, columnIndex, appState, setAppState,  cardNameModalIsOpen, setCardNameModalOpen}) {\n\n    Modal.setAppElement('#root');\n\n    const [cardName, setCardName] = useState('');\n\n    function changeName(){\n        // setAppState({...appState, current_board: })\n    }\n\n\n    return (\n    <Modal isOpen={cardNameModalIsOpen} shouldCloseOnOverlayClick={false} onRequestClose={()=>setCardNameModalOpen(false)}> \n        <h1>CardNameModal: {card.name} from column: {appState.boards[appState.current_board].columns[columnIndex].name} (Board: {appState.boards[appState.current_board].name})</h1>\n        <input onChange={(event)=>setCardName(event.target.value)} value={cardName} />\n        {/*<button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-5 text-light\" style={{backgroundColor: \"#4126ab\"}}>*/}\n        {/*    Change Card name*/}\n        {/*</button>*/}\n        <p>TODO: edit card name(probably with Object.assign())</p>\n        <h1>Closes with Esc button (for now)</h1>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}