{"ast":null,"code":"var _jsxFileName = \"/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardNameModal(_ref) {\n  _s();\n\n  let {\n    card,\n    cardIndex,\n    columnIndex,\n    appState,\n    setAppState,\n    cardNameModalIsOpen,\n    setCardNameModalOpen\n  } = _ref;\n  Modal.setAppElement('#root');\n  const [cardName, setCardName] = useState(card.name);\n\n  function changeName() {\n    let boards = [...appState.boards];\n    boards[appState.current_board].columns[columnIndex].cards[cardIndex].name = cardName;\n    console.log('New name must be: ', cardName);\n    setAppState({ ...appState,\n      boards\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: cardNameModalIsOpen,\n    shouldCloseOnOverlayClick: false,\n    onRequestClose: () => setCardNameModalOpen(false),\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-times\",\n      onClick: () => setCardNameModalOpen(false),\n      style: {\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\"From column: \", appState.boards[appState.current_board].columns[columnIndex].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => setCardName(event.target.value),\n      value: cardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-secondary btn-lg px-5 text-light\",\n      onClick: () => {\n        changeName();\n        setCardNameModalOpen(false);\n      },\n      style: {\n        backgroundColor: \"#4126ab\"\n      },\n      children: \"Change Card name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CardNameModal, \"/JJheiMq6Lm8JpMeMfn0FMT4xX8=\");\n\n_c = CardNameModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardNameModal\");","map":{"version":3,"sources":["/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js"],"names":["React","useState","Modal","CardNameModal","card","cardIndex","columnIndex","appState","setAppState","cardNameModalIsOpen","setCardNameModalOpen","setAppElement","cardName","setCardName","name","changeName","boards","current_board","columns","cards","console","log","textAlign","event","target","value","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,eAAe,SAASC,aAAT,OAA0H;AAAA;;AAAA,MAAnG;AAACC,IAAAA,IAAD;AAAOC,IAAAA,SAAP;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,WAAzC;AAAuDC,IAAAA,mBAAvD;AAA4EC,IAAAA;AAA5E,GAAmG;AAErIR,EAAAA,KAAK,CAACS,aAAN,CAAoB,OAApB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACG,IAAI,CAACU,IAAN,CAAxC;;AACA,WAASC,UAAT,GAAqB;AACjB,QAAIC,MAAM,GAAG,CAAC,GAAGT,QAAQ,CAACS,MAAb,CAAb;AACAA,IAAAA,MAAM,CAACT,QAAQ,CAACU,aAAV,CAAN,CAA+BC,OAA/B,CAAuCZ,WAAvC,EAAoDa,KAApD,CAA0Dd,SAA1D,EAAqES,IAArE,GAA4EF,QAA5E;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCT,QAAlC;AACAJ,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeS,MAAAA;AAAf,KAAD,CAAX;AACH;;AAGD,sBACQ,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEP,mBAAf;AAAoC,IAAA,yBAAyB,EAAE,KAA/D;AAAsE,IAAA,cAAc,EAAE,MAAIC,oBAAoB,CAAC,KAAD,CAA9G;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,OAAO,EAAE,MAAMA,oBAAoB,CAAC,KAAD,CAA/D;AAAwE,MAAA,KAAK,EAAE;AAACY,QAAAA,SAAS,EAAE;AAAZ;AAA/E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKlB,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,KAAK,EAAI;AAACQ,QAAAA,SAAS,EAAC;AAAX,OAAb;AAAA,kCAAiDf,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACU,aAAzB,EAAwCC,OAAxC,CAAgDZ,WAAhD,EAA6DQ,IAA9G;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,QAAQ,EAAGS,KAAD,IAASV,WAAW,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArC;AAA2D,MAAA,KAAK,EAAEb;AAAlE;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,kDAAhC;AAAmF,MAAA,OAAO,EAAE,MAAI;AAC5FG,QAAAA,UAAU;AACVL,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,OAHD;AAGG,MAAA,KAAK,EAAE;AAACgB,QAAAA,eAAe,EAAE;AAAlB,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAcH;;GA3BuBvB,a;;KAAAA,a","sourcesContent":["import React, {useState} from 'react'\nimport Modal from 'react-modal'\n\nexport default function CardNameModal({card, cardIndex, columnIndex, appState, setAppState,  cardNameModalIsOpen, setCardNameModalOpen}) {\n\n    Modal.setAppElement('#root');\n\n    const [cardName, setCardName] = useState(card.name);\n    function changeName(){\n        let boards = [...appState.boards];\n        boards[appState.current_board].columns[columnIndex].cards[cardIndex].name = cardName;\n        console.log('New name must be: ', cardName)\n        setAppState({ ...appState, boards });\n    }\n\n\n    return (\n            <Modal isOpen={cardNameModalIsOpen} shouldCloseOnOverlayClick={false} onRequestClose={()=>setCardNameModalOpen(false)}>\n                <i className=\"fas fa-times\" onClick={() => setCardNameModalOpen(false)} style={{textAlign: \"center\"}}></i>\n                <h1>{card.name}</h1>\n                <h4 style = {{textAlign:\"center\"}}>From column: {appState.boards[appState.current_board].columns[columnIndex].name}</h4>\n                <input onChange={(event)=>setCardName(event.target.value)} value={cardName} />\n                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-5 text-light\" onClick={()=>{\n                    changeName();\n                    setCardNameModalOpen(false);\n                }} style={{backgroundColor: \"#4126ab\"}}>\n                    Change Card name\n                </button>\n            </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}