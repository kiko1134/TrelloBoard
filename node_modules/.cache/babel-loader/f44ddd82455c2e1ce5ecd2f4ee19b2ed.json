{"ast":null,"code":"var _jsxFileName = \"/home/uuser/Desktop/trello/TrelloBoard/src/components/navbar/navbar.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from \"react-dom\";\nimport CardModal from '../modals/cardModal';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar(_ref) {\n  _s();\n\n  let {\n    appState,\n    setAppState\n  } = _ref;\n  const [cardModalIsOpen, setCardModalOpen] = useState(false);\n\n  function isCardRecent(card, index, columnIndex) {\n    let curr_time = Date.now();\n    let card_time = card.updated;\n    console.log(card_time);\n\n    if (curr_time - card_time < 300000) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dropdown-item\",\n          href: \"/home\",\n          onClick: () => setCardModalOpen(true),\n          children: card.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardModal, {\n          card: card,\n          cardIndex: index,\n          columnIndex: columnIndex,\n          appState: appState,\n          setAppState: setAppState,\n          cardModalIsOpen: cardModalIsOpen,\n          setCardModalOpen: setCardModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"navbar-brand\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Trello icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navbar-toggler\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarSupportedContent-6\",\n      \"aria-controls\": \"navbarSupportedContent-6\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-toggler-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), localStorage.getItem('username') ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse navbar-collapse justify-content-between\",\n      id: \"navbarSupportedContent-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"nav-link dropdown-toggle\",\n            id: \"navbarDropdownMenuLink\",\n            \"data-toggle\": \"dropdown\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": \"false\",\n            children: \"Boards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            \"aria-labelledby\": \"navbarDropdownMenuLink\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Boards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hr\",\n              children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), appState.boards ? appState.boards.map((board, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"dropdown-item\",\n              href: \"/home\",\n              onClick: () => {\n                setAppState({ ...appState,\n                  current_board: index\n                });\n              },\n              children: board.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"nav-link dropdown-toggle\",\n            id: \"navbarDropdownMenuLink\",\n            \"data-toggle\": \"dropdown\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": \"false\",\n            children: \"Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            \"aria-labelledby\": \"navbarDropdownMenuLink\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Recent Cards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), appState.boards[appState.current_board].columns ? appState.boards[appState.current_board].columns.map(column => column.cards ? column.cards.map((card, index) => isCardRecent(card, index, column.index)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"nav-link active\",\n            href: \"/createBoard\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline my-2 my-lg-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mr-sm-2\",\n          type: \"search\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success my-2 my-sm-0\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true), document.getElementById('navbar'));\n}\n\n_s(Navbar, \"qgH23Yd4itoqLG+WirvlJN6nYH0=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/uuser/Desktop/trello/TrelloBoard/src/components/navbar/navbar.js"],"names":["ReactDOM","CardModal","React","useState","Navbar","appState","setAppState","cardModalIsOpen","setCardModalOpen","isCardRecent","card","index","columnIndex","curr_time","Date","now","card_time","updated","console","log","name","createPortal","localStorage","getItem","boards","map","board","current_board","columns","column","cards","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from \"react-dom\";\nimport CardModal from '../modals/cardModal';\nimport React, {useState} from \"react\";\n\n\nexport default function Navbar({appState, setAppState}) {\n\n    const [cardModalIsOpen, setCardModalOpen] = useState(false)\n\n    function isCardRecent(card, index, columnIndex) {\n        let curr_time = Date.now();\n        let card_time = card.updated;\n        console.log(card_time);\n        if (curr_time - card_time < 300000) {\n            return(\n                <div>\n                    <a className=\"dropdown-item\" href=\"/home\" key={index} onClick={() => setCardModalOpen(true)}>{card.name}</a>\n                    <CardModal card={card} cardIndex={index} columnIndex={columnIndex} appState={appState}\n                               setAppState={setAppState} cardModalIsOpen={cardModalIsOpen} setCardModalOpen={setCardModalOpen} />\n                </div>\n            )\n        }\n    }\n\n    return ReactDOM.createPortal(\n        <>\n            <a className=\"navbar-brand\"><strong>Trello icon</strong></a>\n\n\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent-6\"\n                    aria-controls=\"navbarSupportedContent-6\" aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"/>\n            </button>\n            {localStorage.getItem('username') ?\n                <div className=\"collapse navbar-collapse justify-content-between\" id=\"navbarSupportedContent-6\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n                               aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Boards\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <p>Boards</p>\n                                <div className=\"hr\">\n                                    <hr/>\n                                </div>\n                                {appState.boards?\n                                    appState.boards.map((board, index) => (\n                                        <a className=\"dropdown-item\" href=\"/home\" key={index} onClick={() => {\n                                            setAppState({...appState, current_board: index})\n                                        }}>{board.name}</a>\n                                    )) : <></>\n\n                                }\n                            </div>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n                               aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Recent\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <p>Recent Cards</p>\n                                <hr/>\n                                {appState.boards[appState.current_board].columns?\n                                    appState.boards[appState.current_board].columns.map((column) => (\n                                        column.cards?\n                                            column.cards.map((card, index) => (\n                                                isCardRecent(card, index, column.index)\n                                            )):<></>\n                                    ))\n                                    :<></>\n                                }\n                            </div>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" href=\"/createBoard\">Create</a>\n                        </li>\n                    </ul>\n                    <form className=\"form-inline my-2 my-lg-0\">\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                    </form>\n                </div>\n                : <></>\n            }\n        </>,\n        document.getElementById('navbar')\n    );\n}\n"]},"metadata":{},"sourceType":"module"}