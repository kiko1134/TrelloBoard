{"ast":null,"code":"var _jsxFileName = \"/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardNameModal(_ref) {\n  _s();\n\n  let {\n    card,\n    cardIndex,\n    columnIndex,\n    appState,\n    setAppState,\n    cardNameModalIsOpen,\n    setCardNameModalOpen\n  } = _ref;\n  Modal.setAppElement('#root');\n  const [cardName, setCardName] = useState(card.name);\n\n  function changeName() {\n    if (cardName.trim()) {\n      let boards = [...appState.boards];\n      boards[appState.current_board].columns[columnIndex].cards[cardIndex].name = cardName;\n      boards[appState.current_board].columns[columnIndex].cards[cardIndex].updated = new Date().toLocaleString();\n      console.log('New name must be: ', cardName);\n      setAppState({ ...appState,\n        boards\n      });\n      setCardNameModalOpen(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: cardNameModalIsOpen,\n    shouldCloseOnOverlayClick: false,\n    onRequestClose: () => setCardNameModalOpen(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times\",\n        onClick: () => setCardNameModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"From list \", appState.boards[appState.current_board].columns[columnIndex].name, \" in board \", appState.boards[appState.current_board].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => setCardName(event.target.value),\n      value: cardName,\n      style: {\n        width: \"100%\",\n        padding: \"12px 20px\",\n        margin: \"8px 0\",\n        display: \"inline-block\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-secondary btn-lg px-5 text-light\",\n      onClick: () => {\n        changeName();\n      },\n      style: {\n        backgroundColor: \"#4126ab\"\n      },\n      children: \"Change Card name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CardNameModal, \"/JJheiMq6Lm8JpMeMfn0FMT4xX8=\");\n\n_c = CardNameModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardNameModal\");","map":{"version":3,"sources":["/home/uuser/Desktop/trello/TrelloBoard/src/components/modals/cardNameModal.js"],"names":["React","useState","Modal","CardNameModal","card","cardIndex","columnIndex","appState","setAppState","cardNameModalIsOpen","setCardNameModalOpen","setAppElement","cardName","setCardName","name","changeName","trim","boards","current_board","columns","cards","updated","Date","toLocaleString","console","log","display","flexDirection","justifyContent","event","target","value","width","padding","margin","border","borderRadius","boxSizing","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Modal from 'react-modal'\n\nexport default function CardNameModal({card, cardIndex, columnIndex, appState, setAppState,  cardNameModalIsOpen, setCardNameModalOpen}) {\n\n    Modal.setAppElement('#root');\n\n    const [cardName, setCardName] = useState(card.name);\n    function changeName(){\n        if(cardName.trim()) {\n            let boards = [...appState.boards];\n            boards[appState.current_board].columns[columnIndex].cards[cardIndex].name = cardName;\n            boards[appState.current_board].columns[columnIndex].cards[cardIndex].updated = new Date().toLocaleString();\n            console.log('New name must be: ', cardName)\n            setAppState({...appState, boards});\n            setCardNameModalOpen(false);\n        }\n    }\n\n\n    return (\n            <Modal isOpen={cardNameModalIsOpen} shouldCloseOnOverlayClick={false} onRequestClose={()=>setCardNameModalOpen(false)}>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                }}>\n                    <h1>{card.name}</h1>\n                    <i className=\"fas fa-times\" onClick={() => setCardNameModalOpen(false)}></i>\n                </div>\n                <h4>From list {appState.boards[appState.current_board].columns[columnIndex].name} in board {appState.boards[appState.current_board].name}</h4>\n                    <input onChange={(event)=>setCardName(event.target.value)} value={cardName} style={{\n                        width: \"100%\",\n                        padding: \"12px 20px\",\n                        margin: \"8px 0\",\n                        display: \"inline-block\",\n                        border: \"1px solid #ccc\",\n                        borderRadius: \"4px\",\n                        boxSizing: \"border-box\"\n                    }}/>\n                <br/>\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-5 text-light\" onClick={()=>{\n                        changeName();\n                    }} style={{backgroundColor: \"#4126ab\"}}>\n                        Change Card name\n                    </button>\n            </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}