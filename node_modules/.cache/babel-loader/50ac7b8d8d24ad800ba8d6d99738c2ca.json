{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\trello1\\\\TrelloBoard\\\\src\\\\components\\\\navbar\\\\navbar.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from \"react-dom\";\nimport { useState } from \"react\";\nimport CardModal from \"../modals/cardModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar(_ref) {\n  _s();\n\n  let {\n    appState,\n    setAppState\n  } = _ref;\n  let boards = [...appState.boards];\n  const [cardModalIsOpen, setCardModalOpen] = useState(false);\n\n  const filterCards = (columns, query) => {\n    let result = [];\n    columns.forEach(element => {\n      element.cards.forEach(card => {\n        const name = card.name.toLowerCase();\n        const description = card.description.toLowerCase();\n        if (name.includes(query.toLowerCase()) || description.includes(query.toLowerCase())) result.push(card.name);\n      });\n    });\n    return result;\n  };\n\n  const findByName = name => {\n    console.log(name);\n    boards[appState.current_board].columns.forEach((element, index) => {\n      element.cards.forEach((card, card_index) => {\n        if (card.name === name) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"dropdown-item\",\n              onClick: () => setCardModalOpen(true),\n              children: card.name\n            }, card_index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardModal, {\n              card: card,\n              cardIndex: card_index,\n              columnIndex: index,\n              appState: appState,\n              setAppState: setAppState,\n              cardModalIsOpen: cardModalIsOpen,\n              setCardModalOpen: setCardModalOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this);\n        }\n      });\n    });\n  };\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  console.log(boards[appState.current_board].columns);\n  const result = filterCards(boards[appState.current_board].columns, searchQuery);\n  console.log(result);\n\n  const handleInput = event => {\n    setSearchQuery(event.target.value);\n    console.log(event.target.value);\n\n    if (!event.target.value) {\n      setDropdownVisible(false);\n    } else {\n      setDropdownVisible(true);\n    }\n  };\n\n  function dropdowElement() {\n    if (dropdownVisible) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"searchedItems\",\n        style: {\n          position: \"absolute\",\n          height: \"150px\",\n          width: \"300px\",\n          marginTop: \"13%\",\n          backgroundColor: \"white\",\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: searchQuery !== \"\" ? result.map(post => /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => findByName(post),\n            children: post\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"navbar-brand\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Trello icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navbar-toggler\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarSupportedContent-6\",\n      \"aria-controls\": \"navbarSupportedContent-6\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-toggler-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"username\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse navbar-collapse justify-content-between\",\n      id: \"navbarSupportedContent-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"nav-link dropdown-toggle\",\n            id: \"navbarDropdownMenuLink\",\n            \"data-toggle\": \"dropdown\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": \"false\",\n            children: \"Boards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            \"aria-labelledby\": \"navbarDropdownMenuLink\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Boards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hr\",\n              children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), appState.boards.map((board, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"dropdown-item\",\n              href: \"/home\",\n              onClick: () => {\n                setAppState({ ...appState,\n                  current_board: index\n                });\n              },\n              children: board.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"nav-link dropdown-toggle\",\n            id: \"navbarDropdownMenuLink\",\n            \"data-toggle\": \"dropdown\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": \"false\",\n            children: \"Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            \"aria-labelledby\": \"navbarDropdownMenuLink\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Recent Boards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"dropdown-item\",\n              href: \"/\",\n              children: \"Some recent boards...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"nav-link active\",\n            href: \"/createBoard\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline my-2 my-lg-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mr-sm-2\",\n          type: \"search\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\",\n          value: searchQuery,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success my-2 my-sm-0\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), dropdowElement()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true), document.getElementById(\"navbar\"));\n}\n\n_s(Navbar, \"myYWzYuKtSLhn+/imw+4EGr81hM=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/trello1/TrelloBoard/src/components/navbar/navbar.js"],"names":["ReactDOM","useState","CardModal","Navbar","appState","setAppState","boards","cardModalIsOpen","setCardModalOpen","filterCards","columns","query","result","forEach","element","cards","card","name","toLowerCase","description","includes","push","findByName","console","log","current_board","index","card_index","searchQuery","setSearchQuery","dropdownVisible","setDropdownVisible","handleInput","event","target","value","dropdowElement","position","height","width","marginTop","backgroundColor","overflow","display","flexDirection","map","post","id","createPortal","localStorage","getItem","board","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport { useState } from \"react\";\r\nimport CardModal from \"../modals/cardModal\";\r\n\r\nexport default function Navbar({ appState, setAppState }) {\r\n  let boards = [...appState.boards];\r\n  const [cardModalIsOpen, setCardModalOpen] = useState(false);\r\n\r\n  const filterCards = (columns, query) => {\r\n    let result = [];\r\n    columns.forEach((element) => {\r\n      element.cards.forEach((card) => {\r\n        const name = card.name.toLowerCase();\r\n        const description = card.description.toLowerCase();\r\n\r\n        if (\r\n          name.includes(query.toLowerCase()) ||\r\n          description.includes(query.toLowerCase())\r\n        )\r\n          result.push(card.name);\r\n      });\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const findByName = (name) => {\r\n      console.log(name);\r\n    boards[appState.current_board].columns.forEach((element, index) => {\r\n      element.cards.forEach((card, card_index) => {\r\n        if (card.name === name) {\r\n\r\n          return (\r\n            <div>\r\n              <a\r\n                className=\"dropdown-item\"\r\n                key={card_index}\r\n                onClick={() => setCardModalOpen(true)}\r\n              >\r\n                {card.name}\r\n              </a>\r\n              <CardModal\r\n                card={card}\r\n                cardIndex={card_index}\r\n                columnIndex={index}\r\n                appState={appState}\r\n                setAppState={setAppState}\r\n                cardModalIsOpen={cardModalIsOpen}\r\n                setCardModalOpen={setCardModalOpen}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n\r\n  console.log(boards[appState.current_board].columns);\r\n\r\n  const result = filterCards(\r\n    boards[appState.current_board].columns,\r\n    searchQuery\r\n  );\r\n  console.log(result);\r\n\r\n  const handleInput = (event) => {\r\n    setSearchQuery(event.target.value);\r\n    console.log(event.target.value);\r\n    if (!event.target.value) {\r\n      setDropdownVisible(false);\r\n    } else {\r\n      setDropdownVisible(true);\r\n    }\r\n  };\r\n\r\n  function dropdowElement() {\r\n    if (dropdownVisible) {\r\n      return (\r\n        <div\r\n          id=\"searchedItems\"\r\n          style={{\r\n            position: \"absolute\",\r\n            height: \"150px\",\r\n            width: \"300px\",\r\n            marginTop: \"13%\",\r\n            backgroundColor: \"white\",\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          <div style = {{display: \"flex\", flexDirection: \"column\"}}>\r\n            {searchQuery !== \"\" ? (\r\n              result.map((post) => (\r\n                <p  onClick={() => findByName(post)} key={post.id}>\r\n                  {post}\r\n                </p>\r\n              ))\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <a className=\"navbar-brand\">\r\n        <strong>Trello icon</strong>\r\n      </a>\r\n\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent-6\"\r\n        aria-controls=\"navbarSupportedContent-6\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      {localStorage.getItem(\"username\") ? (\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-between\"\r\n          id=\"navbarSupportedContent-6\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                id=\"navbarDropdownMenuLink\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Boards\r\n              </a>\r\n              <div\r\n                className=\"dropdown-menu\"\r\n                aria-labelledby=\"navbarDropdownMenuLink\"\r\n              >\r\n                <p>Boards</p>\r\n                <div className=\"hr\">\r\n                  <hr />\r\n                </div>\r\n                {appState.boards.map((board, index) => (\r\n                  <a\r\n                    className=\"dropdown-item\"\r\n                    href=\"/home\"\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setAppState({ ...appState, current_board: index });\r\n                    }}\r\n                  >\r\n                    {board.name}\r\n                  </a>\r\n                ))}\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                id=\"navbarDropdownMenuLink\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Recent\r\n              </a>\r\n              <div\r\n                className=\"dropdown-menu\"\r\n                aria-labelledby=\"navbarDropdownMenuLink\"\r\n              >\r\n                <p>Recent Boards</p>\r\n                <hr />\r\n                <a className=\"dropdown-item\" href=\"/\">\r\n                  Some recent boards...\r\n                </a>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"/createBoard\">\r\n                Create\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              value={searchQuery}\r\n              onChange={handleInput}\r\n            />\r\n\r\n            <button\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n\r\n            {dropdowElement()}\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>,\r\n    document.getElementById(\"navbar\")\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}