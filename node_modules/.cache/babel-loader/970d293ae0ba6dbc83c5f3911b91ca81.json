{"ast":null,"code":"var _jsxFileName = \"/home/vaskopaligorov/Desktop/TrelloBoard/src/components/column/column.js\";\nimport React from 'react';\nimport Card from \"../card/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Column(_ref) {\n  let {\n    column,\n    columnIndex,\n    appState,\n    setAppState\n  } = _ref;\n\n  function ShowCardInput(bool, index) {\n    if (bool) {\n      document.getElementById('addList' + index).style.display = \"block\";\n      document.getElementById('addColumn' + index).style.display = \"none\";\n    } else {\n      document.getElementById('addList' + index).style.display = \"none\";\n      document.getElementById('addColumn' + index).style.display = \"flex\";\n    }\n  }\n\n  function AddCard(element, index) {\n    if (element.value.trim()) {\n      let card = {};\n      card.name = element.value;\n      card.description = '';\n      let boards = [...appState.boards];\n      boards[appState.current_board].columns[index].cards.push(card);\n      setAppState({ ...appState,\n        boards\n      });\n      element.value = '';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"js-column js-list list\",\n    id: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: column.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cards\",\n      children: column.cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        cardIndex: index,\n        columnIndex: columnIndex,\n        appState: appState,\n        setAppState: setAppState\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"js-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: `addColumn${columnIndex}`,\n        className: \" addColumn\",\n        onClick: () => ShowCardInput(true, columnIndex),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add another list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `addList${columnIndex}`,\n        className: \"addList\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Enter list title...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"js-list \",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: event => AddCard(event.target.parentElement.previousSibling, columnIndex),\n            children: \"Add card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times icon\",\n            onClick: () => ShowCardInput(false, columnIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/home/vaskopaligorov/Desktop/TrelloBoard/src/components/column/column.js"],"names":["React","Card","Column","column","columnIndex","appState","setAppState","ShowCardInput","bool","index","document","getElementById","style","display","AddCard","element","value","trim","card","name","description","boards","current_board","columns","cards","push","map","event","target","parentElement","previousSibling"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from \"../card/card\";\n\nexport default function Column({ column, columnIndex, appState, setAppState }) {\n\n    function ShowCardInput(bool, index) {\n        if (bool) {\n            document.getElementById('addList' + index).style.display = \"block\";\n            document.getElementById('addColumn' + index).style.display = \"none\";\n        }\n        else {\n            document.getElementById('addList' + index).style.display = \"none\";\n            document.getElementById('addColumn' + index).style.display = \"flex\";\n        }\n    }\n\n    function AddCard(element, index) {\n        if (element.value.trim()) {\n            let card = {}\n            card.name = element.value;\n            card.description = '';\n\n            let boards = [...appState.boards];\n            boards[appState.current_board].columns[index].cards.push(card);\n            setAppState({ ...appState, boards });\n            element.value='';\n        }\n    }\n\n    return (\n        <div className=\"js-column js-list list\" id=\"column\">\n            <h2>{column.name}</h2>\n            <div id=\"cards\">\n                {column.cards.map((card, index) =>\n                    <Card card={card} cardIndex={index} columnIndex={columnIndex} appState={appState} setAppState={setAppState} key={index}/>\n                )}\n            </div>\n            <div className=\"js-column\">\n                <div id={`addColumn${columnIndex}`} className=\" addColumn\" onClick={() => ShowCardInput(true, columnIndex)}>\n                    <i className=\"fas fa-plus\"></i>\n                    <p>Add another list</p>\n                </div>\n                <div id={`addList${columnIndex}`} className=\"addList\">\n                    <input type=\"text\" id=\"name\" placeholder=\"Enter list title...\" />\n                    <div className=\"js-list \">\n                        <button className=\"btn btn-primary\" onClick={(event) => AddCard(event.target.parentElement.previousSibling, columnIndex)}>Add card</button>\n                        <i className=\"fas fa-times icon\" onClick={() => ShowCardInput(false, columnIndex)}></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}